package cn.edu.tsinghua.iotdb.benchmark.conf;

import cn.edu.tsinghua.iotdb.benchmark.utils.TimeUtils;

/**
 * 系统运行常量值
 */
public class Constants {
    private static Config config = ConfigDescriptor.getInstance().getConfig();
    public static final long START_TIMESTAMP = TimeUtils.convertDateStrToTimestamp(config.START_TIME);
    public static final String URL = "jdbc:iotdb://%s:%s/";
    public static final String USER = "root";
    public static final String PASSWD = "root";
    public static final String ROOT_SERIES_NAME = "root";
    public static final String CONSOLE_PREFIX = "IotDB-benchmark>";
    public static final String BENCHMARK_CONF = "benchmark-conf";
    public static final String POSTGRESQL_JDBC_NAME = "org.postgresql.Driver";
    public static final String POSTGRESQL_URL = "jdbc:postgresql://%s:%s/%s";
    public static final String POSTGRESQL_USER = "postgres";
    public static final String POSTGRESQL_PASSWD = "postgres";
    //support DB names of DB_SWITCH
    public static final String DB_IOT = "IoTDB";
    public static final String DB_INFLUX = "InfluxDB";
    public static final String DB_OPENTS = "OpenTSDB";
    public static final String DB_CTS = "CTSDB";
    public static final String DB_KAIROS = "KairosDB";
    public static final String DB_TIMESCALE = "TimescaleDB";
    //special DB_SWITCH
    public static final String BENCHMARK_IOTDB = "App";

    public static final String MYSQL_DRIVENAME = "com.mysql.jdbc.Driver";

    public static final String[] QUERY_CHOICE_NAME = {
            " ",
            "Precise",
            "Fuzzy",
            "Aggregation",
            "Range",
            "Criteria",
            "Nearest Point",
            "Group By",
            "SLimit",
            "Limit Criteria",
            "Aggregation Without Filter",
            "Aggregation With Value Filter"
    };

    public static final String SAMPLE_DATA_FILE_NAME = "sampleData.txt";
    //different running mode
    public static final String MODE_IMPORT_DATA_FROM_CSV = "importDataFromCSV";
    public static final String MODE_WRITE_WITH_REAL_DATASET = "writeWithRealDataSet";
    public static final String MODE_QUERY_WITH_REAL_DATASET = "queryWithRealDataSet";
    public static final String MODE_QUERY_TEST_WITH_DEFAULT_PATH = "queryTestWithDefaultPath";
    public static final String MODE_INSERT_TEST_WITH_DEFAULT_PATH = "insertTestWithDefaultPath";
    public static final String MODE_TEST_WITH_DEFAULT_PATH = "testWithDefaultPath";
    public static final String MODE_SERVER_MODE = "serverMODE";
    public static final String MODE_CLIENT_SYSTEM_INFO = "clientSystemInfo";
    public static final String MODE_INSERT_TEST_WITH_USERDEFINED_PATH = "insertTestWithUserDefinedPath";
    public static final String MODE_EXECUTE_SQL_FROM_FILE = "executeSQLFromFile";

    public static final String EXE_SQL_FROM_FILE_MODE = "1";

    //写入text类型指定数据
    public static final String TEXT_GEN = "000105dc130703081c1f00001b6300001b6400001b6500001b6600001b6700001b680dc0150001000100020002000700070c050401010a000000000000000063000000000000008800034803480348000148db00013e700048f8640011ac7e0025d76c00fc000c041a0004f2b7000114fb0001326700013f78000151eb196400002b190200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000fcffffffffffffffffffffffffffff3f00c0000003000c003000c0000003000c003000c0000003000c003000c0000003000c003000c0000003000c003000c0000003000c003000c0000003000c003000c0000003000c003000c0000003000c003000c0000003000c003000c0000003000c003000c0000003000c003000c0000003000c003000c0000003000c003000c0000003000c00300001000200010002000100020001000200010002000100020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004b4b4b4b646464643c3c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000045044f0f00c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000090009000900090f3a163a9e3a803a740f16e0168c16a616b50f1c8e1c931c921c910f197c198d199b199c9f000025002500250025ffedffedffedffed00000000000000000000000000000000000000000000000000000000000000000000000000000009000900090009ff033afd3b1d3b283b10006b006c006d006c00330031003300340f0eea0efe0ee10ee80439043bffecfff2090b6f0af3f500000900090009000900000000000000000000000000000000000000000000000000000000000000000000440c1c1c13191e1affc0ffffff0f00000000f0ff41784178408840883ffc3ffc3f983f983f983f983f843f84ff0f000000000000000000000000000000000000000000000000ff0f000000000000000000000000000000000000000000000000ff0f1e1e1e1e19a019a01806180618d818d81ba81ba81e5a1e5aff0f1a681a681a901a90186a186a19501950198c198c19c819c80f418c418c409c409c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000989c9da09e9c98969596979600983f060606060606929448920400000000f0f0f0f0f0f0606060605060f0f0f0f0f0f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003af23afafdffffff555555555555555555555555555555cf0100000000000000000000000000000000000000000000000000010300010001000100010103002b002b002b002b0000000000040003000000000004000300000000000400030000000000040003030e030e030e030eb01084b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002019e


}
